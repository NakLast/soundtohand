{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sorn\\\\Project(NSC)\\\\Code\\\\project-nsc\\\\soundtohand\\\\src\\\\component\\\\TextToHander.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Typography, Button, TextareaAutosize } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DefaultPlayer as Video } from 'react-html5video';\nimport 'react-html5video/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextToHand() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [note, setNote] = useState(null);\n  const [cutWordTH, setCutWordTH] = useState([]);\n  var wordList = {};\n  useEffect(() => {\n    handleText();\n  }, [input]);\n\n  const handleText = () => {\n    let config = {\n      'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ'\n    };\n    axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\", {\n      headers: config\n    }).then(response => {\n      console.log(response.data);\n      wordList = response.data.tokens;\n      setCutWordTH(wordList);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 10,\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      textAlign: \"center\",\n      children: \" Text To Hand \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      textAlign: \"center\",\n      children: \" Text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 8,\n        placeholder: \"Add text...\",\n        style: {\n          width: 500\n        },\n        onInput: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setCutWordTH(nextState => !nextState),\n        children: \"Tranlate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"80px; text-align=center;\",\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"80px; text-align=center;\",\n            children: \"Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), cutWordTH.map(word => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Video, {\n                className: \"Video\",\n                muted: true,\n                controls: ['PlayPause', 'Seek', 'Time', 'Fullscreen'],\n                onCanPlayThrough: () => {// Do stuff\n                },\n                children: /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: `video/${word}.mp4`,\n                  type: \"video/webm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, word, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextToHand, \"PBMypx9WNHorI9WKDx5/+EGzcqg=\");\n\n_c = TextToHand;\nexport default TextToHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextToHand\");","map":{"version":3,"sources":["D:/Sorn/Project(NSC)/Code/project-nsc/soundtohand/src/component/TextToHander.js"],"names":["Box","Container","Typography","Button","TextareaAutosize","React","useState","useEffect","axios","DefaultPlayer","Video","TextToHand","input","setInput","note","setNote","cutWordTH","setCutWordTH","wordList","handleText","config","get","headers","then","response","console","log","data","tokens","width","e","target","value","nextState","map","word"],"mappings":"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","sourcesContent":["import { Box, Container, Typography, Button, TextareaAutosize } from \"@mui/material\"\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport { DefaultPlayer as Video } from 'react-html5video';\r\nimport 'react-html5video/dist/styles.css';\r\n\r\nfunction TextToHand() {\r\n    const [input, setInput] = useState(\"\")\r\n    const [note, setNote] = useState(null)\r\n    const [cutWordTH, setCutWordTH] = useState([])\r\n\r\n    var wordList = {};\r\n\r\n    useEffect(() => {\r\n        handleText()\r\n    }, [input])\r\n\r\n    const handleText = () => {\r\n        let config = { 'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ' };\r\n            \r\n        axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\", { headers: config }).then((response) => {\r\n            console.log(response.data)\r\n            wordList = response.data.tokens; \r\n            setCutWordTH(wordList);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Box\r\n         mt={10}\r\n         textAlign='center'\r\n        >\r\n            <Typography variant=\"h4\" textAlign=\"center\"> Text To Hand </Typography>\r\n            <br />\r\n            <Typography variant=\"h6\" textAlign=\"center\"> Text </Typography>\r\n            <br />\r\n\r\n            <Container textAlign='center'>\r\n                <TextareaAutosize \r\n                 aria-label=\"minimum height\"\r\n                 minRows={8}\r\n                 placeholder=\"Add text...\"\r\n                 style={{ width: 500 }}\r\n                 onInput={(e)=>setInput(e.target.value)}\r\n                />\r\n            </Container>\r\n            <br />\r\n\r\n            <Container>\r\n                <Button variant='contained' color='primary'\r\n                    onClick={() => setCutWordTH(nextState => !nextState)}\r\n                >\r\n                    Tranlate\r\n                </Button>\r\n            </Container>\r\n             <br />\r\n\r\n            <center>\r\n                <table border='1'>\r\n                <tr className='row'>\r\n                    <th width='80px; text-align=center;'>Word</th>\r\n                    <th width='80px; text-align=center;'>Video</th>\r\n                </tr>\r\n                    {cutWordTH.map(word =>{\r\n                    return <tr key={word}>\r\n                        <td>\r\n                            {word}\r\n                        </td>\r\n                        <td>\r\n                            <Video className='Video' muted\r\n                            controls={['PlayPause', 'Seek', 'Time', 'Fullscreen']}\r\n                            onCanPlayThrough={() => {\r\n                                // Do stuff\r\n                            }}>\r\n                            <source src={`video/${word}.mp4`} type=\"video/webm\" />\r\n                            </Video>\r\n                        </td>\r\n                    </tr>\r\n                    })}\r\n                </table>\r\n            </center>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TextToHand"]},"metadata":{},"sourceType":"module"}