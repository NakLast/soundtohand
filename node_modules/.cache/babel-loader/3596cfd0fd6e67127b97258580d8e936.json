{"ast":null,"code":"import _slicedToArray from\"D:\\\\Sorn\\\\Project(NSC)\\\\Code\\\\project-nsc\\\\soundtohand\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{Button,Container,Typography,Box,TextareaAutosize}from\"@mui/material\";import MicIcon from'@material-ui/icons/Mic';import React,{useState,useEffect}from\"react\";import FiberManualRecordIcon from'@material-ui/icons/FiberManualRecord';import axios from'axios';import{DefaultPlayer as Video}from'react-html5video';import'react-html5video/dist/styles.css';import{red}from'@material-ui/core/colors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;var mic=new SpeechRecognition();mic.continuous=true;mic.interimResults=true;mic.lang='th-Th';function VoiceToHand(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isListening=_useState2[0],setIsListening=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cutWordTH=_useState6[0],setCutWordTH=_useState6[1];var wordList={};useEffect(function(){handleListen();},[isListening]);var handleListen=function handleListen(){if(isListening){mic.start();}else{mic.stop();}mic.onresult=function(event){var transcript=Array.from(event.results).map(function(result){return result[0];}).map(function(result){return result.transcript;}).join('');setNote(transcript);var config={'Apikey':'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ'};axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\"+transcript,{headers:config}).then(function(response){wordList=response.data.tokens;setCutWordTH(wordList);});};};return/*#__PURE__*/_jsxs(Box,{mt:10,textAlign:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",textAlign:\"center\",children:\" Voice To Hand \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",textAlign:\"center\",children:\" Text \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Container,{textAlign:\"center\",sx:{width:500,height:100,border:'1px solid black'},children:note}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Container,{textAlign:\"center\",children:[isListening?/*#__PURE__*/_jsxs(\"span\",{children:[\" \",/*#__PURE__*/_jsx(MicIcon,{color:\"action\"}),\" \"]}):/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(FiberManualRecordIcon,{style:{color:red[500]}}),/*#__PURE__*/_jsx(MicIcon,{color:\"action\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return setIsListening(function(prevState){return!prevState;});},children:\"Start/Stop\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsxs(\"table\",{border:\"1\",children:[/*#__PURE__*/_jsxs(\"tr\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"th\",{width:\"80px; text-align=center;\",children:\"Word\"}),/*#__PURE__*/_jsx(\"th\",{width:\"80px; text-align=center;\",children:\"Video\"})]}),cutWordTH.map(function(word){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:word}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Video,{className:\"Video\",muted:true,controls:['PlayPause','Seek','Time','Fullscreen'],onCanPlayThrough:function onCanPlayThrough(){},children:/*#__PURE__*/_jsx(\"source\",{src:\"video/\".concat(word,\".mp4\"),type:\"video/webm\"})})})]},word);})]})})]});}export default VoiceToHand;","map":{"version":3,"sources":["D:/Sorn/Project(NSC)/Code/project-nsc/soundtohand/src/component/VoiceToHander.js"],"names":["Button","Container","Typography","Box","TextareaAutosize","MicIcon","React","useState","useEffect","FiberManualRecordIcon","axios","DefaultPlayer","Video","red","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","VoiceToHand","isListening","setIsListening","note","setNote","cutWordTH","setCutWordTH","wordList","handleListen","start","stop","onresult","event","transcript","Array","from","results","map","result","join","config","get","headers","then","response","data","tokens","width","height","border","color","prevState","word"],"mappings":"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","sourcesContent":["import { Button, Container, Typography, Box, TextareaAutosize } from \"@mui/material\";\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nimport axios from 'axios';\r\nimport { DefaultPlayer as Video } from 'react-html5video';\r\nimport 'react-html5video/dist/styles.css';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst SpeechRecognition =\r\n    window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition()\r\n\r\nmic.continuous = true\r\nmic.interimResults = true\r\nmic.lang = 'th-Th'\r\n\r\nfunction VoiceToHand() {\r\n  const [isListening, setIsListening] = useState(false)\r\n  const [note, setNote] = useState(null)\r\n  const [cutWordTH, setCutWordTH] = useState([])\r\n\r\n  var wordList = {};\r\n\r\n  useEffect(() => {\r\n    handleListen();\r\n  }, [isListening])\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start()\r\n    } else {\r\n      mic.stop()\r\n    }\r\n    mic.onresult = event => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('')\r\n      setNote(transcript)\r\n\r\n      let config = { 'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ' };\r\n\r\n      axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\" + transcript, { headers: config }).then((response) => {\r\n        wordList = response.data.tokens; \r\n        setCutWordTH(wordList);\r\n      });\r\n    }\r\n  }\r\n\r\n    return (\r\n        <Box\r\n         mt={10}\r\n         textAlign='center'\r\n        >\r\n            <Typography variant=\"h4\" textAlign=\"center\"> Voice To Hand </Typography>\r\n            <br />\r\n            <Typography variant=\"h6\" textAlign=\"center\"> Text </Typography>\r\n            <br />\r\n\r\n            <Container\r\n             textAlign='center'\r\n             sx={{\r\n                width: 500,\r\n                height: 100,\r\n                border: '1px solid black',\r\n             }}\r\n            >\r\n              {note}\r\n            </Container>\r\n            <br />\r\n\r\n            <Container textAlign='center'>\r\n                {isListening ? <span> <MicIcon color='action'/> </span> : <span> \r\n                                                                            <FiberManualRecordIcon style={{ color: red[500] }} /> \r\n                                                                            <MicIcon color=\"action\" /> \r\n                                                                          </span>}\r\n                <br />\r\n                \r\n                <Button variant='contained' color='primary'\r\n                 onClick={() => setIsListening(prevState => !prevState)}\r\n                >\r\n                  Start/Stop\r\n                </Button>\r\n            </Container>\r\n            <br />\r\n\r\n            <center>\r\n                <table border='1'>\r\n                <tr className='row'>\r\n                    <th width='80px; text-align=center;'>Word</th>\r\n                    <th width='80px; text-align=center;'>Video</th>\r\n                </tr>\r\n                    {cutWordTH.map(word =>{\r\n                    return <tr key={word}>\r\n                        <td>\r\n                            {word}\r\n                        </td>\r\n                        <td>\r\n                            <Video className='Video' muted\r\n                                   controls={['PlayPause', 'Seek', 'Time', 'Fullscreen']}\r\n                                   onCanPlayThrough={() => {\r\n                            }}>\r\n                              <source src={`video/${word}.mp4`} type=\"video/webm\" />\r\n                            </Video>\r\n                        </td>\r\n                    </tr>\r\n                    })}\r\n                </table>\r\n            </center>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default VoiceToHand;"]},"metadata":{},"sourceType":"module"}