{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sorn\\\\Project(NSC)\\\\Code\\\\project-nsc\\\\soundtohand\\\\src\\\\component\\\\TextToHander.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Typography, Button } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextToHand() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [output, srtOutput] = useState(\"\");\n  useE;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 10,\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      textAlign: \"center\",\n      children: \" Text To Hand \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      textAlign: \"center\",\n      children: \" Text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      sx: {\n        width: 500,\n        height: 100,\n        border: '1px solid black'\n      },\n      children: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\" // onClick={() => setIsListening(prevState => !prevState)}\n        ,\n        children: \"Tranlate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      sx: {\n        width: 500,\n        height: 100,\n        border: '1px solid black'\n      },\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextToHand, \"DpWj4p0SPFAH6sz/A3oz6EI6GNU=\");\n\n_c = TextToHand;\nexport default TextToHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextToHand\");","map":{"version":3,"sources":["D:/Sorn/Project(NSC)/Code/project-nsc/soundtohand/src/component/TextToHander.js"],"names":["Box","Container","Typography","Button","React","useState","useEffect","TextToHand","input","setInput","output","srtOutput","useE","width","height","border"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,eAAnD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAO,EAAAA,IAAI;AAEJ,sBACI,QAAC,GAAD;AACC,IAAA,EAAE,EAAE,EADL;AAEC,IAAA,SAAS,EAAC,QAFX;AAAA,4BAII,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,SAAD;AACC,MAAA,SAAS,EAAC,QADX;AAEC,MAAA,EAAE,EAAE;AACFC,QAAAA,KAAK,EAAE,GADL;AAEFC,QAAAA,MAAM,EAAE,GAFN;AAGFC,QAAAA,MAAM,EAAE;AAHN,OAFL;AAAA,gBAQKP;AARL;AAAA;AAAA;AAAA;AAAA,YATJ,eAmBI;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAqBI,QAAC,SAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC,CACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ,eA4BK;AAAA;AAAA;AAAA;AAAA,YA5BL,eA8BI,QAAC,SAAD;AACC,MAAA,SAAS,EAAC,QADX;AAEC,MAAA,EAAE,EAAE;AACFK,QAAAA,KAAK,EAAE,GADL;AAEFC,QAAAA,MAAM,EAAE,GAFN;AAGFC,QAAAA,MAAM,EAAE;AAHN,OAFL;AAAA,gBAQKL;AARL;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAjDQH,U;;KAAAA,U;AAmDT,eAAeA,UAAf","sourcesContent":["import { Box, Container, Typography, Button } from \"@mui/material\"\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\nfunction TextToHand() {\r\n    const [input, setInput] = useState(\"\")\r\n    const [output, srtOutput] = useState(\"\")\r\n\r\n    useE\r\n\r\n    return(\r\n        <Box\r\n         mt={10}\r\n         textAlign='center'\r\n        >\r\n            <Typography variant=\"h4\" textAlign=\"center\"> Text To Hand </Typography>\r\n            <br />\r\n            <Typography variant=\"h6\" textAlign=\"center\"> Text </Typography>\r\n            <br />\r\n\r\n            <Container\r\n             textAlign='center'\r\n             sx={{\r\n               width: 500,\r\n               height: 100,\r\n               border: '1px solid black',\r\n             }}\r\n            >\r\n                {input}\r\n            </Container>\r\n            <br />\r\n\r\n            <Container>\r\n                <Button variant='contained' color='primary'\r\n                    // onClick={() => setIsListening(prevState => !prevState)}\r\n                >\r\n                    Tranlate\r\n                </Button>\r\n            </Container>\r\n             <br />\r\n\r\n            <Container\r\n             textAlign='center'\r\n             sx={{\r\n               width: 500,\r\n               height: 100,\r\n               border: '1px solid black',\r\n             }}\r\n            >\r\n                {output}\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TextToHand"]},"metadata":{},"sourceType":"module"}