{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sorn\\\\Project(NSC)\\\\Code\\\\project-nsc\\\\soundtohand\\\\src\\\\component\\\\TextToHander.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Typography, Button, TextareaAutosize } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextToHand() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [cutWordTH, setCutWordTH] = useState([]);\n\n  const translate = () => {};\n\n  var wordList = {};\n  useEffect(() => {\n    handleText();\n  });\n\n  const handleText = () => {\n    let config = {\n      'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ'\n    };\n    axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\" + transcript, {\n      headers: config\n    }).then(response => {\n      wordList = response.data.tokens;\n      setCutWordTH(wordList);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 10,\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      textAlign: \"center\",\n      children: \" Text To Hand \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      textAlign: \"center\",\n      children: \" Text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 8,\n        placeholder: \"Add text...\",\n        style: {\n          width: 500\n        },\n        onInput: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\" // onClick={() => setIsListening(prevState => !prevState)}\n        ,\n        children: \"Tranlate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"minimum height\",\n        minRows: 8,\n        style: {\n          width: 500\n        },\n        value: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextToHand, \"wG/vjB4ZSWum2QIgL62sN4lS1nw=\");\n\n_c = TextToHand;\nexport default TextToHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextToHand\");","map":{"version":3,"sources":["D:/Sorn/Project(NSC)/Code/project-nsc/soundtohand/src/component/TextToHander.js"],"names":["Box","Container","Typography","Button","TextareaAutosize","React","useState","useEffect","axios","TextToHand","input","setInput","output","setOutput","cutWordTH","setCutWordTH","translate","wordList","handleText","config","get","transcript","headers","then","response","data","tokens","width","e","target","value"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,gBAA7C,QAAqE,eAArE;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,SAAS,GAAG,MAAM,CAEvB,CAFD;;AAIA,MAAIC,QAAQ,GAAG,EAAf;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrB,QAAIC,MAAM,GAAG;AAAE,gBAAU;AAAZ,KAAb;AAEAX,IAAAA,KAAK,CAACY,GAAN,CAAU,+CAA+CC,UAAzD,EAAqE;AAAEC,MAAAA,OAAO,EAAEH;AAAX,KAArE,EAA0FI,IAA1F,CAAgGC,QAAD,IAAc;AACzGP,MAAAA,QAAQ,GAAGO,QAAQ,CAACC,IAAT,CAAcC,MAAzB;AACAX,MAAAA,YAAY,CAACE,QAAD,CAAZ;AACH,KAHD;AAIH,GAPD;;AASA,sBACI,QAAC,GAAD;AACC,IAAA,EAAE,EAAE,EADL;AAEC,IAAA,SAAS,EAAC,QAFX;AAAA,4BAII,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA,6BACI,QAAC,gBAAD;AACC,sBAAW,gBADZ;AAEC,QAAA,OAAO,EAAE,CAFV;AAGC,QAAA,WAAW,EAAC,aAHb;AAIC,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAJR;AAKC,QAAA,OAAO,EAAGC,CAAD,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AALvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBI,QAAC,SAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC,CACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eA2BK;AAAA;AAAA;AAAA;AAAA,YA3BL,eA6BI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA,6BACA,QAAC,gBAAD;AACK,sBAAW,gBADhB;AAEK,QAAA,OAAO,EAAE,CAFd;AAGK,QAAA,KAAK,EAAE;AAAEH,UAAAA,KAAK,EAAE;AAAT,SAHZ;AAIK,QAAA,KAAK,EAAEf;AAJZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GAhEQH,U;;KAAAA,U;AAkET,eAAeA,UAAf","sourcesContent":["import { Box, Container, Typography, Button, TextareaAutosize } from \"@mui/material\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nfunction TextToHand() {\r\n    const [input, setInput] = useState(\"\")\r\n    const [output, setOutput] = useState(\"\")\r\n    const [cutWordTH, setCutWordTH] = useState([])\r\n\r\n    const translate = () => {\r\n        \r\n    }\r\n\r\n    var wordList = {};\r\n\r\n    useEffect(() => {\r\n        handleText()\r\n    })\r\n\r\n    const handleText = () => {\r\n        let config = { 'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ' }\r\n\r\n        axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\" + transcript, { headers: config }).then((response) => {\r\n            wordList = response.data.tokens\r\n            setCutWordTH(wordList)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Box\r\n         mt={10}\r\n         textAlign='center'\r\n        >\r\n            <Typography variant=\"h4\" textAlign=\"center\"> Text To Hand </Typography>\r\n            <br />\r\n            <Typography variant=\"h6\" textAlign=\"center\"> Text </Typography>\r\n            <br />\r\n\r\n            <Container textAlign='center'>\r\n                <TextareaAutosize \r\n                 aria-label=\"minimum height\"\r\n                 minRows={8}\r\n                 placeholder=\"Add text...\"\r\n                 style={{ width: 500 }}\r\n                 onInput={(e)=>setInput(e.target.value)}\r\n                />\r\n            </Container>\r\n            <br />\r\n\r\n            <Container>\r\n                <Button variant='contained' color='primary'\r\n                    // onClick={() => setIsListening(prevState => !prevState)}\r\n                >\r\n                    Tranlate\r\n                </Button>\r\n            </Container>\r\n             <br />\r\n\r\n            <Container textAlign='center'>\r\n            <TextareaAutosize \r\n                 aria-label=\"minimum height\"\r\n                 minRows={8}\r\n                 style={{ width: 500 }}\r\n                 value={output}\r\n                />\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TextToHand"]},"metadata":{},"sourceType":"module"}