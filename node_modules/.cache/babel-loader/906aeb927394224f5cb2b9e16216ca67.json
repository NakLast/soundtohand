{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sorn\\\\Project(NSC)\\\\Code\\\\project-nsc\\\\soundtohand\\\\src\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th'; //https://www.npmjs.com/package/thai-wordcut\n//https://www.npmjs.com/package/tnthai\n\n/*  Example  \r\n\r\nconst videoDB = {\r\n  \"สวัสดี\" : \"s1.mp4\",\r\n  \"ไปไหนมา\" : \"s2.mp4\",\r\n}\r\n\r\n\r\nvideoUse = []\r\nfor (i = 0;i < wordlist.length;i++){\r\n    videoUse.append( videoDB[ wordlist[i] ] )\r\n}\r\n\r\n\r\n*/\n\nfunction App() {\n  _s();\n\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState(null);\n  const [savedNotes, setSavedNotes] = useState([]);\n  var wordList = {};\n  useEffect(() => {\n    //wordCut.init();\n    handleListen();\n  }, [isListening]);\n\n  const handleListen = () => {\n    if (isListening) {\n      mic.start();\n\n      mic.onend = () => {\n        console.log('continue..');\n        mic.start();\n      };\n    } else {\n      mic.stop();\n\n      mic.onend = () => {\n        console.log('Stopped Mic on Click');\n      };\n    }\n\n    mic.onstart = () => {\n      console.log('Mics on');\n    };\n\n    mic.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      console.log(transcript);\n      setNote(transcript);\n      /*let config = { 'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ' };\r\n      //return axios.get(`${apiBaseURL}/v1/cryptocurrency/map`, { headers: config })\r\n            axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\"+transcript, { headers : config } ).then( (response)=>{\r\n             wordList = response.data.tokens;\r\n             alert(wordList);\r\n         }\r\n      ).catch( (error) => {\r\n        alert(error)\r\n      });*/\n\n      mic.onerror = event => {\n        console.log(event.error);\n      };\n    };\n  };\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note]);\n    setNote('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Voice Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 50\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: \"24\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\" \", note, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [isListening ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDF99\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDED1\\uD83C\\uDF99\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsListening(prevState => !prevState),\n          children: \"Start/Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveNote,\n          disabled: !note,\n          children: \"Save Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Translate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input_area\",\n          name: \"message\",\n          rows: \"10\",\n          cols: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), savedNotes.map(n => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"IR4DLCuW8QpG1kIdQGMJRxF9Xns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Sorn/Project(NSC)/Code/project-nsc/soundtohand/src/Content.js"],"names":["React","useState","useEffect","Box","Paper","Typography","axios","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","App","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","wordList","handleListen","start","onend","console","log","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","handleSaveNote","marginTop","width","prevState","n"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Box, Paper, Typography } from '@material-ui/core'\r\nimport './App.css'\r\n\r\nimport axios from 'axios';\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition\r\nconst mic = new SpeechRecognition()\r\n\r\nmic.continuous = true\r\nmic.interimResults = true\r\nmic.lang = 'th-Th'\r\n\r\n//https://www.npmjs.com/package/thai-wordcut\r\n\r\n//https://www.npmjs.com/package/tnthai\r\n\r\n/*  Example  \r\n\r\nconst videoDB = {\r\n  \"สวัสดี\" : \"s1.mp4\",\r\n  \"ไปไหนมา\" : \"s2.mp4\",\r\n}\r\n\r\n\r\nvideoUse = []\r\nfor (i = 0;i < wordlist.length;i++){\r\n    videoUse.append( videoDB[ wordlist[i] ] )\r\n}\r\n\r\n\r\n*/\r\n\r\n\r\nfunction App() {\r\n  const [isListening, setIsListening] = useState(false)\r\n  const [note, setNote] = useState(null)\r\n  const [savedNotes, setSavedNotes] = useState([])\r\n\r\n  var wordList ={};\r\n  \r\n  useEffect(() => {\r\n    //wordCut.init();\r\n    handleListen();\r\n  }, [isListening])\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start()\r\n      mic.onend = () => {\r\n        console.log('continue..')\r\n        mic.start()\r\n      }\r\n    } else {\r\n      mic.stop()\r\n      mic.onend = () => {\r\n        console.log('Stopped Mic on Click')\r\n      }\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('Mics on')\r\n    }\r\n\r\n    mic.onresult = event => {\r\n      const transcript = Array.from(event.results)\r\n        .map(result => result[0])\r\n        .map(result => result.transcript)\r\n        .join('')\r\n      console.log(transcript)\r\n      setNote(transcript)\r\n\r\n      /*let config = { 'Apikey': 'rBOeYWQF1L4QEfhffQB7ubqYAJqYSWvQ' };\r\n      //return axios.get(`${apiBaseURL}/v1/cryptocurrency/map`, { headers: config })\r\n    \r\n      axios.get(\"https://api.aiforthai.in.th/tlexplus?text=\"+transcript, { headers : config } ).then( (response)=>{\r\n             wordList = response.data.tokens;\r\n             alert(wordList);\r\n         }\r\n      ).catch( (error) => {\r\n        alert(error)\r\n      });*/\r\n\r\n      mic.onerror = event => {\r\n        console.log(event.error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSaveNote = () => {\r\n    setSavedNotes([...savedNotes, note ])\r\n    setNote('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{marginTop:100}}>\r\n            <center>\r\n            <h1>Voice Notes</h1>\r\n            <h2>Current Note</h2>\r\n            <Box sx={{ width:50 }} >\r\n              <Paper elevation=\"24\"  >\r\n                  <Typography> {note} </Typography>\r\n              </Paper>\r\n            </Box>\r\n\r\n            </center>\r\n\r\n            <center>\r\n                {isListening ? <span>🎙️</span> : <span>🛑🎙️</span>}\r\n                <br />\r\n                <button onClick={() => setIsListening(prevState => !prevState)}>\r\n                    Start/Stop\r\n                </button>\r\n                <button onClick={handleSaveNote} disabled={!note}>\r\n                    Save Note\r\n                </button>\r\n            </center>\r\n\r\n        <center>\r\n          <h2>Translate</h2>\r\n          <textarea id=\"input_area\" name=\"message\" rows=\"10\" cols=\"100\" ></textarea>\r\n          {savedNotes.map(n => (\r\n            <p key={n}>{n}</p>\r\n          ))}\r\n        </center>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}